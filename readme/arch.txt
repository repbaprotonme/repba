# packages
pacman -S libwebp ranger unrar rust wasm-pack ffmpeg libheif

# upgrade
sudo pacman -S archlinux-keyring && sudo pacman -Syu
pacman -Syu                        # upgrade system
sudo pacman -S archlinux-keyring
pacman-key --refresh-keys          # upgrade keys
pacman -S antergos-keyring       # upgrade antergos keys
yaourt -Syua                       # upgrade system including yaourt

# clean arch cache
pacman -Qdt                        # do you have any orphaned packages
pacman -Rns $(pacman -Qdtq)        # to remove all orphaned packages
pacman -Scc                        # cleans /var/cache to retrieve lots of files space

# other
pacman -Q                          # Show all installed packages
pacman --sync --refresh            # This will retrieve a fresh master package list from the repositories defined in the /etc/pacman.conf file and decompress it into the database area.
pacman --sync --search <regexp>    # Search the repositories for a package
pacman --sync --info foo           # Search each package in the sync databases for names or descriptions that match regexp.
pacman --sync foo                  # Adding a package from the repositories
pacman --query                     # List installed packages
pacman --query foo                 # Check if a specific package is installed
pacman --query --info foo          # Display specific package info
pacman --query --list foo          # Display list of files contained in package
pacman --query --owns /path        # Find out which package a specific file belongs to
pacman -U xxxx.pkg.tar.gz          # install file manually
pacman -Sy pacman                  # upgrade pacman
makepkg -si; pacman -U <*pkg*>     # make package and install specific package not from the repositories but from a file
yaourt --sync <package>            # install from aur
abs                                # update /var/abs (packages)
pacman -Rns packagename            # remove package and all dependencies
pacman -Ss <string>                # search packages
pacman -Qi | awk '/^Name/ {pkg=$3} /Size/ {print $4$5,pkg}' | sort -n  #Listing all installed packages with size
pacman -Syu                       # Synchronize with repositories before upgrading packages that are out of date on the local system.
pacman -S                         # Install specific package(s) from the repositories
pacman -R                         # Remove the specified package(s), retaining its configuration(s) and required dependencies
pacman -Si                        # Display information about a given package in the repositories
pacman -Ss                        # Search for package(s) in the repositories
pacman -Qi                        # Display information about a given package in the local database
pacman -Qs'                       # Search for package(s) in the local database
pacman -Sy && sudo abs            # Update and refresh the local package and ABS databases against repositories
pacman -S --asdeps                # Install given package(s) as dependencies of another package
pacman -Syy                       # Force refresh of all package lists after updating /etc/pacman.d/mirrorlist

diff <(pacman -Qq | sort) <(pacman -Qmq | sort) --new-line-format=' --unchanged-group-format%>'  #Listing official installed packages only

pacman -Qi $(pacman -Qq)|grep 'Name\|Size'| cut -d: -f2 | paste - - | column -t | sort -nk2 #Arch Linux sort installed packages by size

paste <(pacman -Q | awk '{ print $1; }' | xargs pacman -Qi | grep 'Size' | awk '{ print $4$5; }') <(pacman -Q | awk '{print $1; }') | sort -n | column -t #Arch Linux sort installed packages by size

#trust
SigLevel = Required DatabaseOptional TrustedOnly #TrustAll
https://wiki.archlinux.org/index.php/Pacman-key

#Files:
/var/log/pacman.log               # shows installed/removed packages
/etc/security/limits.conf         # permit more files to be open at once

#/etc/security/limits.conf
httpd soft nofile 4096
httpd hard nofile 10240

#dvd
gpasswd -a scott optical

